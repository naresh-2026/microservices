name: CI/CD - Build and Push Go Microservices to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  initialize-pipeline:
    runs-on: ubuntu-latest
    outputs:
      initial_time: ${{ steps.init.outputs.initial_time }}
    steps:
      - name: Record pipeline trigger and initial start time
        id: init
        run: |
          initial_time=$(date +%s)
          trigger_time=$(date -d "${{ github.event.head_commit.timestamp }}" +%s)
          echo "Pipeline initial start time: $initial_time"
          echo "Pipeline trigger time: $trigger_time"
          echo "initial_time=$initial_time" >> $GITHUB_OUTPUT
          echo "trigger_time=$trigger_time" >> $GITHUB_OUTPUT

  discover-services:
    runs-on: ubuntu-latest
    needs: initialize-pipeline
    outputs:
      services: ${{ steps.discover.outputs.services }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect microservices
        id: discover
        run: |
          cd microservices
          services=$(ls -d */ | sed 's#/##' | jq -R . | jq -s .)
          echo "Detected services: $services"
          echo "services=$services" >> $GITHUB_OUTPUT

  build-test-push:
    runs-on: ubuntu-latest
    needs: [initialize-pipeline, discover-services]
    strategy:
      matrix:
        service: ${{ fromJson(needs.discover-services.outputs.services) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Record trigger and start time
        id: times
        run: |
          trigger_time=$(date -d "${{ github.event.head_commit.timestamp }}" +%s)
          start_time=$(date +%s)
          delay=$((start_time - trigger_time))
          echo "trigger_time=${trigger_time}" >> $GITHUB_ENV
          echo "start_time=${start_time}" >> $GITHUB_ENV
          echo "Trigger-to-start delay: ${delay} seconds"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build Go binary
        working-directory: ./microservices/${{ matrix.service }}
        run: |
          echo "üõ† Building Go binary for ${{ matrix.service }}"
          go mod tidy
          go build -o app .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        working-directory: ./microservices/${{ matrix.service }}
        run: |
          echo "üê≥ Building Docker image for ${{ matrix.service }}"
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/githubactions:${{ matrix.service }} .

      - name: Delay for 0.4 seconds
        run: sleep 0.4

      - name: Push Docker image
        working-directory: ./microservices/${{ matrix.service }}
        run: |
          echo "üì§ Pushing Docker image for ${{ matrix.service }}"
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/githubactions:${{ matrix.service }}

      - name: Record end time and calculate duration
        run: |
          end_time=$(date +%s)
          echo "Start time: ${{ env.start_time }}"
          duration=$((end_time - ${{ env.start_time }}))
          echo "‚úÖ Deployment of ${{ matrix.service }} took ${duration} seconds"

  final-summary:
    runs-on: ubuntu-latest
    needs: build-test-push
    steps:
      - name: Print total pipeline deployment time
        run: |
          initial_time=${{ needs.initialize-pipeline.outputs.initial_time }}
          total_end=$(date +%s)
          total_duration=$((total_end - initial_time))
          echo "üéØ Total pipeline deployment time: ${total_duration} seconds"
